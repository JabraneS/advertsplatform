<?php

namespace JOMANEL\PlatformBundle\Repository;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends \Doctrine\ORM\EntityRepository{

	public function  getAllAdverts(){

		$qb = $this->createQueryBuilder('a');

		// Enfin, on retourne le résultat
	    return $qb
	      ->getQuery()
	      ->getResult()
	    ;

	}//fnc

	public function  getAdvertsOfOneCategory($categoryName){

		$qb = $this->createQueryBuilder('a');


		$qb
	      ->innerJoin('a.categories', 'c', 'WITH', 'c.name = :nameCategory')
	      ->addSelect('c')
	      ->setParameter('nameCategory', $categoryName)
	    ;


		// Enfin, on retourne le résultat
	    return $qb
	      ->getQuery()
	      ->getResult()
	    ;

	}//fnc

	public function getAdvertWithCategories(array $categoryNames){

		// Avec le QueryBuilder
		$qb = $this->createQueryBuilder('a');

	    // On fait une jointure avec l'entité Category avec pour alias « c »
	    $qb
	      ->innerJoin('a.categories', 'c')
	      ->addSelect('c')
	    ;

	    // Puis on filtre sur le nom des catégories à l'aide d'un IN
	    $qb->where($qb->expr()->in('c.name', $categoryNames));
	    // La syntaxe du IN et d'autres expressions se trouve dans la documentation Doctrine

	    // Enfin, on retourne le résultat
	    return $qb
	      ->getQuery()
	      ->getResult()
	    ;

	}//fnc

	/*
	public function getAvertApplications($advertTitle){//OneToMany bidi

		$qb = $this->createQueryBuilder('a');

		//jointure
		$qb
			->innerJoin('a.applications', 'app', 'WITH', 'a.title = :titleAdvert')
			->addSelect('app')
			->setParameter('titleAdvert', $advertTitle)
		;

		// Enfin, on retourne le résultat
	    return $qb
	      ->getQuery()
	      ->getResult()
	    ;

	}//fnc
	*/
}//class
